name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20, 21]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Verify lockfile exists
      run: |
        ls -la pnpm-lock.yaml
        echo "Lockfile found, proceeding with installation"
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run type check
      run: pnpm exec tsc --noEmit
    
    - name: Run CI tests
      run: pnpm test:ci
      env:
        SCALEBOX_API_KEY: ${{ secrets.SCALEBOX_API_KEY }}
    
    - name: Run linting
      run: pnpm run lint || echo "Linting not configured yet"
    
    - name: Build package
      run: pnpm run build
    
    - name: Check build output
      run: |
        ls -la dist/
        test -f dist/index.js
        test -f dist/index.d.ts
        test -f dist/index.cjs

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    
    - name: Verify lockfile exists
      run: |
        ls -la pnpm-lock.yaml
        echo "Lockfile found, proceeding with installation"
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run security audit
      run: pnpm audit --audit-level moderate
    
    - name: Check for secrets
      run: |
        # Check for potential API keys or secrets in code
        if grep -r -i "sk-[a-zA-Z0-9]" src/ tests/ examples/; then
          echo "❌ Potential API key found in code"
          exit 1
        fi
        if grep -r -i "pk_[a-zA-Z0-9]" src/ tests/ examples/; then
          echo "❌ Potential API key found in code"
          exit 1
        fi
        if grep -r -i "ya29\." src/ tests/ examples/; then
          echo "❌ Potential OAuth token found in code"
          exit 1
        fi
        echo "✅ No secrets found in code"

  publish:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'
    
    - name: Verify lockfile exists
      run: |
        ls -la pnpm-lock.yaml
        echo "Lockfile found, proceeding with installation"
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build package
      run: pnpm run build
    
    - name: Get version
      id: get_version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
    
    - name: Check if version exists on npm
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "Checking if version $VERSION already exists on npm..."
        if npm view @scalebox/sdk@$VERSION version > /dev/null 2>&1; then
          echo "❌ Version $VERSION already exists on npm. Please update version in package.json"
          exit 1
        else
          echo "✅ Version $VERSION is available for publishing"
        fi
    
    - name: Publish to npm
      run: |
        echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
        echo "@scalebox:registry=https://registry.npmjs.org/" >> ~/.npmrc
        pnpm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create Git tag
      run: |
        VERSION=$(node -p "require('./package.json').version")
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v$VERSION" -m "Release version $VERSION"
        git push origin "v$VERSION"
    
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: Release v${{ steps.get_version.outputs.version }}
        body: |
          ## 🚀 Release v${{ steps.get_version.outputs.version }}
          
          ### 📦 Package Information
          - **Package**: @scalebox/sdk
          - **Version**: ${{ steps.get_version.outputs.version }}
          - **Registry**: [npmjs.com](https://www.npmjs.com/package/@scalebox/sdk)
          
          ### 📋 Changes
          - Automated release from CI/CD pipeline
          - All tests passed ✅
          - Security audit passed ✅
          - Build successful ✅
          
          ### 🔗 Links
          - [npm Package](https://www.npmjs.com/package/@scalebox/sdk)
          - [Documentation](https://github.com/scalebox-dev/scalebox-sdk-js#readme)
          - [Changelog](https://github.com/scalebox-dev/scalebox-sdk-js/blob/main/CHANGELOG.md)
        draft: false
        prerelease: false
